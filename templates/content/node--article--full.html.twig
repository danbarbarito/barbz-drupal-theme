{#
  /**
  * @file
  * Theme override to display a node.
  *
  * Available variables:
  * - node: The node entity with limited access to object properties and methods.
  *   Only method names starting with "get", "has", or "is" and a few common
  *   methods such as "id", "label", and "bundle" are available. For example:
  *   - node.getCreatedTime() will return the node creation timestamp.
  *   - node.hasField('field_example') returns TRUE if the node bundle includes
  *     field_example. (This does not indicate the presence of a value in this
  *     field.)
  *   - node.isPublished() will return whether the node is published or not.
  *   Calling other methods, such as node.delete(), will result in an exception.
  *   See \Drupal\node\Entity\Node for a full list of public properties and
  *   methods for the node object.
  * - label: The title of the node.
  * - content: All node items. Use {{ content }} to print them all,
  *   or print a subset such as {{ content.field_example }}. Use
  *   {{ content|without('field_example') }} to temporarily suppress the printing
  *   of a given child element.
  * - author_picture: The node author user entity, rendered using the "compact"
  *   view mode.
  * - metadata: Metadata for this node.
  * - date: Themed creation date field.
  * - author_name: Themed author name field.
  * - url: Direct URL of the current node.
  * - display_submitted: Whether submission information should be displayed.
  * - attributes: HTML attributes for the containing element.
  *   The attributes.class element may contain one or more of the following
  *   classes:
  *   - node: The current template type (also known as a "theming hook").
  *   - node--type-[type]: The current node type. For example, if the node is an
  *     "Article" it would result in "node--type-article". Note that the machine
  *     name will often be in a short form of the human readable label.
  *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
  *     teaser would result in: "node--view-mode-teaser", and
  *     full: "node--view-mode-full".
  *   The following are controlled through the node publishing options.
  *   - node--promoted: Appears on nodes promoted to the front page.
  *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
  *     teaser listings.
  *   - node--unpublished: Appears on unpublished nodes visible only to site
  *     admins.
  * - title_attributes: Same as attributes, except applied to the main title
  *   tag that appears in the template.
  * - content_attributes: Same as attributes, except applied to the main
  *   content tag that appears in the template.
  * - author_attributes: Same as attributes, except applied to the author of
  *   the node tag that appears in the template.
  * - title_prefix: Additional output populated by modules, intended to be
  *   displayed in front of the main title tag that appears in the template.
  * - title_suffix: Additional output populated by modules, intended to be
  *   displayed after the main title tag that appears in the template.
  * - view_mode: View mode; for example, "teaser" or "full".
  * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
  * - page: Flag for the full page state. Will be true if view_mode is 'full'.
  * - readmore: Flag for more state. Will be true if the teaser content of the
  *   node cannot hold the main body content.
  * - logged_in: Flag for authenticated user status. Will be true when the
  *   current user is a logged-in member.
  * - is_admin: Flag for admin user status. Will be true when the current user
  *   is an administrator.
  *
  * @see template_preprocess_node()
  *
  * @todo Remove the id attribute (or make it a class), because if that gets
  *   rendered twice on a page this is invalid CSS for example: two lists
  *   in different view modes.
  */
  #}

<div class="floating-header">
  <div class="floating-header-logo">
    <a href="{{site_base_url}}">
      <span>{{site_name}}</span>
    </a>
  </div>
  <span class="floating-header-divider">&mdash;</span>
  <div class="floating-header-title">{{label}}</div>
  <div class="floating-header-share">

  </div>
  <progress class="progress" value="0">
    <div class="progress-container">
      <span class="progress-bar"></span>
    </div>
  </progress>
</div>

<main id="site-main" class="site-main outer" role="main">
  <div class="inner">

    <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>

    <article {{attributes.addClass('post-full')}}>

      <header class="post-full-header">
        <section class="post-full-meta">
          <time class="post-full-meta-date" datetime="{{date.content|date('Y-m-d')}}">{{date.content|date('d F Y')}}</time>

        </section>
        <h1 class="post-full-title"><span class="post-full-tag">{{content.field_tags[0]['#title']}}::</span>{{label}}</h1>
        {{title_suffix}}
      </header>

      <figure class="post-full-image" style="background-image: url({{file_url(node.field_image.entity.uri.value)}})">
      </figure>

      <section {{content_attributes.addClass('post-full-content')}}>
        {{content.body}}
      </section>

    </article>

  </div>
</main>
